/*! goatee.js 02-11-2014 */
(function(){"use strict";function a(c,d){b(c);var e=this;this.channel=null,this.event_emitter=new a.CommandDispatcher,this.connection=new a.ConnectionManager(d),this.connection.bind("connected",function(){e.connected=!0,console.log("Connected to goatee server.")}),this.connection.bind("message",function(a){console.log(e.channel),e.event_emitter.emit(e.channel,a)}),this.connection.bind("error",function(a){console.warn("Error connecting to goatee server: "+a)}),this.connection.bind("closed",function(){console.warn("Connection to the goatee server was closed.")}),this.connect(c)}function b(a){(null===a||void 0===a)&&console.warn("An API key must be supplied.")}var c=a.prototype;a.connected=!1,c.bind=function(a,b){return this.channel=a,this.connection.subscribe(a),this.event_emitter.bind(a,b),this},c.emit=function(a,b){return this.connection.send_event(a,b),this},c.connect=function(a){this.connection.connect(a)},this.goatee=a}).call(this),function(){"use strict";goatee.Utils={extend:function(a){for(var b=1;b<arguments.length;b++){var c=arguments[b];for(var d in c)a[d]=c[d]&&c[d].constructor&&c[d].constructor===Object?goatee.Utils.extend(a[d]||{},c[d]):c[d]}return a}}}.call(this),function(){"use strict";function a(){this.callbacks=new b}function b(){this._callbacks={}}var c=a.prototype;c.bind=function(a,b,c){return this.callbacks.add(a,b,c),this},c.emit=function(a,b){var c,d=this.callbacks.get(a);if(d&&d.length>0)for(c=0;c<d.length;c++)d[c].fn.call(d[c].ctx||window,b);return this},b.prototype.get=function(a){return this._callbacks[a]},b.prototype.add=function(a,b,c){this._callbacks[a]=this._callbacks[a]||[],this._callbacks[a].push({fn:b,context:c})},goatee.CommandDispatcher=a}.call(this),function(){"use strict";function a(a){goatee.CommandDispatcher.call(this),this.url=a,this.connection=null,this.state="initialized"}var b=a.prototype;goatee.Utils.extend(b,goatee.CommandDispatcher.prototype),b.connect=function(a){var b=this,c=this.checkCompatibility();c&&(this.connection=new WebSocket(this.url+"?api_key="+a),this.connection.onopen=function(){b.onOpen()},this.connection.onmessage=function(a){b.onMessage(a)},this.connection.onerror=function(a){b.onError(a)},this.connection.onclose=function(){b.onClose()})},b.subscribe=function(a){var b=this;this.waitForConnection(function(){var c={channel:a,action:"bind",token:"ABC123"};b.connection.send(JSON.stringify(c))})},b.onOpen=function(){this.state="connected",this.emit("connected")},b.onError=function(a){this.state="error",this.emit("error",a)},b.onClose=function(){this.state="closed",this.emit("closed")},b.onMessage=function(a){this.emit("message",a)},b.send_event=function(a,b){if("connected"!==this.state)return void this.emit("error","Not connected to the goatee server.");var b={channel:a,payload:b,action:"message",token:"ABC123"};this.connection.send(JSON.stringify(b))},b.waitForConnection=function(a){var b=this;setTimeout(function(){return"connected"===b.state?void(null!==a&&a()):void b.waitForConnection(a)},5)},b.checkCompatibility=function(){return void 0===window.WebSocket?(this.emit("error","WebSockets aren't supported on this browser."),!1):!0},goatee.ConnectionManager=a}.call(this);